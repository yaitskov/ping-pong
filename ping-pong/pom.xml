<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.dan.ping.pong</groupId>
        <artifactId>aggregator</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>ping-pong</artifactId>
    <packaging>war</packaging>
    <name>ping-pong</name>
    <description>This module will handle ping-pong</description>
    <url>http://maven.apache.org</url>
    <properties>
        <httpcomponents.version>4.5.2</httpcomponents.version>
        <jooq.version>3.8.4</jooq.version>
        <aspectj.version>1.8.8</aspectj.version>
        <jackson.version>2.8.7</jackson.version>
        <jersey.version>2.22.2</jersey.version>
        <logback.version>1.2.1</logback.version>
        <lombok.version>1.16.12</lombok.version>
        <mysql-connector-java.version>5.1.38</mysql-connector-java.version>
        <slf4j.version>1.7.21</slf4j.version>
        <restassured.version>3.0.1</restassured.version>
        <spring.version>4.3.2.RELEASE</spring.version>
        <jetty.version>9.3.8.v20160314</jetty.version>
        <http.port>8080</http.port>
        <debug.port>5008</debug.port>
        <jacoco.version>0.7.6.201602180812</jacoco.version>
        <mysql.port>3307</mysql.port>
        <sandbox.env.prop.file>docker-env.properties</sandbox.env.prop.file>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>0.13</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-annotations</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dan.ping.pong</groupId>
            <artifactId>setup-env</artifactId>
            <version>${project.parent.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>2.4.5</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring3</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.1.7</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.10</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>javax-websocket-server-impl</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <debug>true</debug>
                    <debuglevel>source,vars,lines</debuglevel>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                </dependencies>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <jdbc>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://127.0.0.1:3306/ping_pong</url>
                        <user>root</user>
                        <password>root</password>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.util.mysql.MySQLDatabase</name>
                            <includes>.*</includes>
                            <schemata>
                                <schema>
                                    <inputSchema>ping_pong</inputSchema>
                                </schema>
                            </schemata>
                            <customTypes>
                                <customType>
                                    <name>OptionalString</name>
                                    <type>java.util.Optional&lt;java.lang.String&gt;</type>
                                    <binding>org.dan.ping.pong.sys.db.converters.OptionalStringConverter</binding>
                                </customType>
                                <customType>
                                    <name>OptionalInteger</name>
                                    <type>java.util.Optional&lt;java.lang.Integer&gt;</type>
                                    <binding>org.dan.ping.pong.sys.db.converters.OptionalIntegerConverter</binding>
                                </customType>
                                <customType>
                                    <name>OptionalDouble</name>
                                    <type>java.util.Optional&lt;java.lang.Double&gt;</type>
                                    <binding>org.dan.ping.pong.sys.db.converters.OptionalDoubleConverter</binding>
                                </customType>
                                <customType>
                                    <name>Instant</name>
                                    <type>java.time.Instant</type>
                                    <binding>org.dan.ping.pong.sys.db.converters.InstantToTimestampConverter</binding>
                                </customType>
                                <customType>
                                    <name>OptionalInstant</name>
                                    <type>java.util.Optional&lt;java.time.Instant&gt;</type>
                                    <binding>org.dan.ping.pong.sys.db.converters.OptionalInstantConverter</binding>
                                </customType>
                                <customType>
                                    <name>MatchState</name>
                                    <type>org.dan.ping.pong.app.match.MatchState</type>
                                    <binding>org.dan.ping.pong.app.match.MatchStateConverter</binding>
                                </customType>
                                <customType>
                                    <name>GroupState</name>
                                    <type>org.dan.ping.pong.app.castinglots.GroupState</type>
                                    <binding>org.dan.ping.pong.app.castinglots.GroupStateConverter</binding>
                                </customType>
                                <customType>
                                    <name>TableState</name>
                                    <type>org.dan.ping.pong.app.table.TableState</type>
                                    <binding>org.dan.ping.pong.app.table.TableStateConverter</binding>
                                </customType>
                                <customType>
                                    <name>BidState</name>
                                    <type>org.dan.ping.pong.app.bid.BidState</type>
                                    <binding>org.dan.ping.pong.app.bid.BidStateConverter</binding>
                                </customType>
                                <customType>
                                    <name>TournamentState</name>
                                    <type>org.dan.ping.pong.app.tournament.TournamentState</type>
                                    <binding>org.dan.ping.pong.app.tournament.TournamentStateConverter</binding>
                                </customType>
                            </customTypes>
                            <forcedTypes>
                                <forcedType>
                                    <name>OptionalString</name>
                                    <expression>.*users\.(email|phone)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalString</name>
                                    <expression>.*place\.(email|phone)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInstant</name>
                                    <expression>.*match_score\.updated</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInstant</name>
                                    <expression>.*matches\.(started|ended)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>Instant</name>
                                    <expression>.*tournament\.(opens_at)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalString</name>
                                    <expression>.*category\.(gender)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>Instant</name>
                                    <expression>.*tournament\.(opens_at)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalDouble</name>
                                    <expression>.*tournament\.(ticket_price)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*category\.(max_age|min_age)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*tournament\.(previous_tid)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>GroupState</name>
                                    <expression>.*groups\.(state)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*bid\.(gid)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*matches\.(win_mid|lose_mid)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>MatchState</name>
                                    <expression>.*matches\.(state)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*matches\.(gid)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>OptionalInteger</name>
                                    <expression>.*tables\.(mid)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>TableState</name>
                                    <expression>.*tables\.(state)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>BidState</name>
                                    <expression>.*bid\.(state)</expression>
                                    <types>.*</types>
                                </forcedType>
                                <forcedType>
                                    <name>TournamentState</name>
                                    <expression>.*tournament\.(state)</expression>
                                    <types>.*</types>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <generate>
                            <relations>true</relations>
                        </generate>
                        <target>
                            <packageName>ord.dan.ping.pong.jooq</packageName>
                            <directory>target/generated-sources/</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${project.name}</name>
                            <build>
                                <from>ping-pong-jetty:9</from>
                                <tags>
                                    <tag>${project.version}</tag>
                                </tags>
                                <assembly>
                                    <basedir>/var/lib/jetty/webapps/</basedir>
                                    <descriptorRef>rootWar</descriptorRef>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>simulate</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>*Sim.java</include>
                            </includes>
                            <!--fork mode is required to enable reading std input -->
                            <forkMode>never</forkMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-server</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>9.3.8.v20160314</version>
                        <configuration>
                            <httpConnector>
                                <port>8081</port>
                            </httpConnector>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-image</id>
            <activation>
                <property>
                    <name>env.JENKINS</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-container</id>
            <properties>
                <network.name>${docker.network}</network.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.0.0</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                            <skipMain>true</skipMain>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>launch-cluster</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <workingDirectory>${basedir}</workingDirectory>
                                    <arguments>
                                        <argument>cleanup.sh</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <images>
                                <image>
                                    <name>${project.name}:${project.version}</name>
                                    <alias>ping-pong</alias>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <net>${network.name}</net>
                                        <envPropertyFile>${basedir}/${sandbox.env.prop.file}</envPropertyFile>
                                        <ports>
                                            <port>${debug.port}:5005</port>
                                            <port>${http.port}:80</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>${project.build.directory}:/logs</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <JVM_OPTS>
                                                -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
                                            </JVM_OPTS>
                                        </env>
                                        <wait>
                                            <time>3001</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>launch-cluster</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
