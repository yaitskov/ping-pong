const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');
const OfflinePlugin = require('offline-plugin');

module.exports = {
    entry: './src/ping-pong-main.js',
    output: {
        filename: 'bundle.js',
        path: path.resolve(__dirname, 'dist')
    },
    module: {
     rules: [
         {
             test: /\.(scss|css)$/,
             use: [
                 'style-loader',
                 'css-loader',
                 'sass-loader'
             ]
         },
         {
             test: /\.(png|jpg|jpeg)$/,
             use: ['file-loader']
         },
         {   test: /\.html$/,
             use: [ 'file-loader?name=[path][name].[ext]!extract-loader!html-loader' ]
         }
     ]
    },
    devtool: 'inline-source-map',
    plugins:[
        new CleanWebpackPlugin(['dist']),
        new HtmlWebpackPlugin({
            template: 'src/index-template.ejs'
        }),
        //new webpack.optimize.UglifyJsPlugin({
            // sourceMap: options.devtool && (options.devtool.indexOf("sourcemap") >= 0
           // || options.devtool.indexOf("source-map") >= 0)
        //}),
        new OfflinePlugin({
            ServiceWorker: false,
            //AppCache: false,
            // externals: [
            //     'index.html'
            // ]
        })
    ]
};
